{
  "_module_info": {
    "id": "mentor",
    "name": "Mentor",
    "description": "Content module for mentor area",
    "dependencies": [],
    "tags": [
      "Arbiter",
      "Cartographer",
      "Dreamwalker",
      "Emissary",
      "Glasswright",
      "Healer",
      "Lumenar",
      "Resonant",
      "Rift-Skipper",
      "Scout",
      "Sneaky",
      "Storm-Conductor",
      "Tide-Singer",
      "Tinkerer",
      "Trickster"
    ],
    "factions": [
      "Aeol Nests",
      "Quiet Ledger"
    ],
    "node_count": 16,
    "start_count": 0
  },
  "nodes": {
    "mentor_glasswright_intro": {
      "title": "Glasswright Kilnback",
      "text": "A master glasswright rides a kiln-backed crawler, sketching shade lattices in hovering light.",
      "choices": [
        {
          "text": "(Tinkerer) Present your lattice sketches for critique.",
          "condition": {
            "type": "has_tag",
            "value": "Tinkerer"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "glasswright_sketch",
              "value": true
            }
          ],
          "target": "mentor_glasswright_trial"
        },
        {
          "text": "(Cartographer) Show how you mapped the engine's ribs to guide the reefs.",
          "condition": {
            "type": "has_tag",
            "value": "Cartographer"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "glasswright_chart",
              "value": true
            }
          ],
          "target": "mentor_glasswright_trial"
        },
        {
          "text": "Ask for guidance on balancing migrating shade.",
          "effects": [
            {
              "type": "set_flag",
              "flag": "glasswright_patience",
              "value": true
            }
          ],
          "target": "mentor_glasswright_trial"
        },
        {
          "text": "Return to the shade workshop.",
          "target": "saltglass_shade_workshop"
        }
      ]
    },
    "mentor_glasswright_trial": {
      "title": "Glasswright Trial Loom",
      "text": "The mentor raises a lattice of heat and glass, expecting you to anchor the migrating shadows.",
      "choices": [
        {
          "text": "(Lumenar) Bend kiln-light to follow the mentor's pattern.",
          "condition": {
            "type": "has_tag",
            "value": "Lumenar"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "glasswright_light",
              "value": true
            }
          ],
          "target": "mentor_glasswright_award"
        },
        {
          "text": "(Tinkerer) Stitch a color baffle into the shade engine seam.",
          "condition": {
            "type": "has_tag",
            "value": "Tinkerer"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "glasswright_baffle",
              "value": true
            },
            {
              "type": "add_item",
              "value": "color baffle"
            }
          ],
          "target": "mentor_glasswright_award"
        },
        {
          "text": "(Sneaky) Slip a map sliver under the lens to reveal hidden fractures.",
          "condition": {
            "type": "has_tag",
            "value": "Sneaky"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "glasswright_hidden",
              "value": true
            }
          ],
          "target": "mentor_glasswright_award"
        },
        {
          "text": "Admit you need more practice and return to the workshop.",
          "target": "saltglass_shade_workshop"
        }
      ]
    },
    "mentor_glasswright_award": {
      "title": "Glasswright Accord",
      "text": "Satisfied, the mentor traces a sigil of refracted light and offers a shard inscribed with your new calling.",
      "choices": [
        {
          "text": "Accept the lattice oath and become a Glasswright.",
          "condition": {
            "type": "flag_eq",
            "flag": "glasswright_light",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Glasswright"
            },
            {
              "type": "set_flag",
              "flag": "glasswright_mentored",
              "value": true
            }
          ],
          "target": "saltglass_shade_workshop"
        },
        {
          "text": "(Tinkerer) Swear to tend the migratory shade engines.",
          "condition": {
            "type": "flag_eq",
            "flag": "glasswright_baffle",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Glasswright"
            },
            {
              "type": "set_flag",
              "flag": "glasswright_mentored",
              "value": true
            }
          ],
          "target": "saltglass_shade_workshop"
        },
        {
          "text": "(Sneaky) Promise to guard the hidden fractures of the reefs.",
          "condition": {
            "type": "flag_eq",
            "flag": "glasswright_hidden",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Glasswright"
            },
            {
              "type": "set_flag",
              "flag": "glasswright_mentored",
              "value": true
            }
          ],
          "target": "saltglass_shade_workshop"
        },
        {
          "text": "Thank the mentor and step back into the workshop.",
          "target": "saltglass_shade_workshop"
        }
      ]
    },
    "mentor_rift_skipper_intro": {
      "title": "Rift-Skipper's Perch",
      "text": "A rift-skipper lounges between suspended anchors, eyes tracking unseen seams as they test a ring of phase-tuning stones.",
      "choices": [
        {
          "text": "Present the decoded map and request training.",
          "condition": {
            "type": "flag_eq",
            "flag": "rift_skipper_map_ready",
            "value": true
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "rift_skipper_invited",
              "value": true
            }
          ],
          "target": "mentor_rift_skipper_trial"
        },
        {
          "text": "Study the anchors from afar and slip back to the plaza.",
          "target": "cloud_burrow_inverted_plaza"
        },
        {
          "text": "Discuss the skip map's context back at the hidden cache.",
          "target": "cloud_burrow_hidden_cache"
        },
        {
          "text": "(Dreamwalker) Match the anchor rhythm to shared dream currents.",
          "condition": {
            "type": "has_tag",
            "value": "Dreamwalker"
          },
          "target": "mentor_dreamwalker_awakened"
        }
      ]
    },
    "mentor_rift_skipper_trial": {
      "title": "Rift-Skipper Trial",
      "text": "The mentor releases phase stones into the gale, expecting you to thread leaps between inverted streets before they collide.",
      "choices": [
        {
          "text": "(Sneaky) Slide along shadow seams to land on each anchor silently.",
          "condition": {
            "type": "has_tag",
            "value": "Sneaky"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "rift_skipper_trial_shadow",
              "value": true
            }
          ],
          "target": "mentor_rift_skipper_award"
        },
        {
          "text": "(Cartographer) Plot the skip vectors to anticipate each anchor drift.",
          "condition": {
            "type": "has_tag",
            "value": "Cartographer"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "rift_skipper_trial_charted",
              "value": true
            }
          ],
          "target": "mentor_rift_skipper_award"
        },
        {
          "text": "(Storm-Conductor) Harness the gale's beat to propel each leap.",
          "condition": {
            "type": "has_tag",
            "value": "Storm-Conductor"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "rift_skipper_trial_gale",
              "value": true
            }
          ],
          "target": "mentor_rift_skipper_award"
        },
        {
          "text": "Yield before the phase stones destabilize.",
          "target": "cloud_burrow_inverted_plaza"
        }
      ]
    },
    "mentor_rift_skipper_award": {
      "title": "Rift-Skipper Accord",
      "text": "The mentor presses a phase stone into your palm, granting you the call-sign of those who slip between seams.",
      "choices": [
        {
          "text": "(Shadow Line) Accept the phase stone and swear the Rift-Skipper oath.",
          "condition": {
            "type": "flag_eq",
            "flag": "rift_skipper_trial_shadow",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Rift-Skipper"
            }
          ],
          "target": "cloud_burrow_inverted_plaza"
        },
        {
          "text": "(Charted Line) Accept the phase stone and imprint your plotted skips.",
          "condition": {
            "type": "flag_eq",
            "flag": "rift_skipper_trial_charted",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Rift-Skipper"
            }
          ],
          "target": "cloud_burrow_inverted_plaza"
        },
        {
          "text": "(Storm-Conductor) Bind the gale to your new route and accept the title.",
          "condition": {
            "type": "flag_eq",
            "flag": "rift_skipper_trial_gale",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Rift-Skipper"
            }
          ],
          "target": "cloud_burrow_storm_gallery"
        },
        {
          "text": "Thank the mentor and plan your next skip.",
          "target": "cloud_burrow_inverted_plaza"
        }
      ]
    },
    "mentor_storm_conductor_intro": {
      "title": "Storm-Conductor Atrium",
      "text": "The Storm-Conductor stands amid suspended batons, each stroke tuning a different gust coursing through the gallery.",
      "choices": [
        {
          "text": "(Resonant) Echo the mentor's baton patterns in song.",
          "condition": {
            "type": "has_tag",
            "value": "Resonant"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "storm_conductor_harmonic",
              "value": true
            }
          ],
          "target": "mentor_storm_conductor_trial"
        },
        {
          "text": "(Scout) Present mapped air-currents from the warrens.",
          "condition": {
            "type": "has_tag",
            "value": "Scout"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "storm_conductor_route",
              "value": true
            }
          ],
          "target": "mentor_storm_conductor_trial"
        },
        {
          "text": "Ask for guidance in balancing the gust ledger.",
          "effects": [
            {
              "type": "set_flag",
              "flag": "storm_conductor_listened",
              "value": true
            }
          ],
          "target": "mentor_storm_conductor_trial"
        },
        {
          "text": "Return to the storm gallery.",
          "target": "cloud_burrow_storm_gallery"
        }
      ]
    },
    "mentor_storm_conductor_trial": {
      "title": "Tempest Loom Trial",
      "text": "Batons whirl as the mentor releases a tangle of gusts, expecting you to weave current, chorus, and care into one flow.",
      "choices": [
        {
          "text": "(Resonant) Sing counterwinds that stitch the gale together.",
          "condition": {
            "type": "has_tag",
            "value": "Resonant"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "storm_conductor_trial_echo",
              "value": true
            }
          ],
          "target": "mentor_storm_conductor_award"
        },
        {
          "text": "(Emissary) Coordinate the watch-lines so every gust yields passage.",
          "condition": {
            "type": "has_tag",
            "value": "Emissary"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "storm_conductor_trial_deal",
              "value": true
            },
            {
              "type": "rep_delta",
              "faction": "Aeol Nests",
              "value": 1
            }
          ],
          "target": "mentor_storm_conductor_award"
        },
        {
          "text": "(Healer) Steady the apprentices as the gale surges.",
          "condition": {
            "type": "has_tag",
            "value": "Healer"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "storm_conductor_trial_care",
              "value": true
            }
          ],
          "target": "mentor_storm_conductor_award"
        },
        {
          "text": "Bow out before the tempest overwhelms you.",
          "target": "cloud_burrow_storm_gallery"
        }
      ]
    },
    "mentor_storm_conductor_award": {
      "title": "Storm-Conductor Accord",
      "text": "With the gale subdued, the mentor threads a windbone baton into your hands and marks you as kin to the storm.",
      "choices": [
        {
          "text": "(Resonant) Accept the baton and swear to keep the gale whole.",
          "condition": {
            "type": "flag_eq",
            "flag": "storm_conductor_trial_echo",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Storm-Conductor"
            },
            {
              "type": "set_flag",
              "flag": "storm_conductor_mentored",
              "value": true
            }
          ],
          "target": "cloud_burrow_storm_gallery"
        },
        {
          "text": "(Emissary) Pledge to coordinate every gust-bound envoy.",
          "condition": {
            "type": "flag_eq",
            "flag": "storm_conductor_trial_deal",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Storm-Conductor"
            },
            {
              "type": "set_flag",
              "flag": "storm_conductor_mentored",
              "value": true
            }
          ],
          "target": "cloud_burrow_storm_gallery"
        },
        {
          "text": "(Healer) Vow to tend the conductors who keep the gale balanced.",
          "condition": {
            "type": "flag_eq",
            "flag": "storm_conductor_trial_care",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Storm-Conductor"
            },
            {
              "type": "set_flag",
              "flag": "storm_conductor_mentored",
              "value": true
            }
          ],
          "target": "cloud_burrow_storm_gallery"
        },
        {
          "text": "Thank the mentor and return to the gallery.",
          "target": "cloud_burrow_storm_gallery"
        }
      ]
    },
    "mentor_tide_singer_intro": {
      "title": "Tide-Singer's Alcove",
      "text": "A Tide-Singer rests waist-deep in glowing brine, humming countercurrents that braid wakes into safe passage.",
      "choices": [
        {
          "text": "Present your harmonized hymn and ask for mentorship.",
          "condition": {
            "type": "flag_eq",
            "flag": "tide_singer_invited",
            "value": true
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "tide_singer_trial_ready",
              "value": true
            }
          ],
          "target": "mentor_tide_singer_trial"
        },
        {
          "text": "Bow to the singer and let the hymn fade.",
          "target": "amber_tides_tide_cloister"
        },
        {
          "text": "Share the skip-map insights with the rift-skipper mentor.",
          "target": "mentor_rift_skipper_intro"
        },
        {
          "text": "(Tide-Singer) Weave a tide-binding vow toward the orchard's tidal channel.",
          "condition": {
            "type": "has_tag",
            "value": "Tide-Singer"
          },
          "target": "starfallen_orchard_tidal_channel"
        }
      ]
    },
    "mentor_tide_singer_trial": {
      "title": "Tide-Singer Trial",
      "text": "Currents surge through the alcove as the mentor calls for you to steer wakes, travelers, and memories in unison.",
      "choices": [
        {
          "text": "(Resonant) Weave a counter-harmony that steadies each swell.",
          "condition": {
            "type": "has_tag",
            "value": "Resonant"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "tide_singer_trial_resonant",
              "value": true
            }
          ],
          "target": "mentor_tide_singer_award"
        },
        {
          "text": "(Healer) Guide the wakes to cradle each traveler safely.",
          "condition": {
            "type": "has_tag",
            "value": "Healer"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "tide_singer_trial_healer",
              "value": true
            }
          ],
          "target": "mentor_tide_singer_award"
        },
        {
          "text": "(Dreamwalker) Fold shared memories into the tide to calm it.",
          "condition": {
            "type": "has_tag",
            "value": "Dreamwalker"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "tide_singer_trial_dream",
              "value": true
            }
          ],
          "target": "mentor_tide_singer_award"
        },
        {
          "text": "Retreat before the undertow takes hold.",
          "target": "amber_tides_tide_cloister"
        }
      ]
    },
    "mentor_tide_singer_award": {
      "title": "Tide-Singer Accord",
      "text": "The Tide-Singer braids a current of amber light around your wrists, recognizing you as one who can steer memorial tides.",
      "choices": [
        {
          "text": "(Resonant) Accept the current and vow to keep wakes in harmony.",
          "condition": {
            "type": "flag_eq",
            "flag": "tide_singer_trial_resonant",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Tide-Singer"
            }
          ],
          "target": "amber_tides_mnemonic_harbor"
        },
        {
          "text": "(Healer) Accept the current and promise safe passage for every wake.",
          "condition": {
            "type": "flag_eq",
            "flag": "tide_singer_trial_healer",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Tide-Singer"
            }
          ],
          "target": "amber_tides_tide_cloister"
        },
        {
          "text": "(Dreamwalker) Accept the current and carry its memories between tides.",
          "condition": {
            "type": "flag_eq",
            "flag": "tide_singer_trial_dream",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Tide-Singer"
            }
          ],
          "target": "amber_tides_mnemonic_harbor"
        },
        {
          "text": "Thank the mentor and let the currents settle.",
          "target": "amber_tides_tide_cloister"
        }
      ]
    },
    "mentor_dreamwalker_intro": {
      "title": "Dreamwalker Concierge",
      "text": "A Dreamwalker with eyes like closed moons invites you to walk the seam between who you were and who you might drift into.",
      "choices": [
        {
          "text": "Accept the Dreamwalker's invitation into the seam.",
          "effects": [
            {
              "type": "set_flag",
              "flag": "dreamwalker_invited",
              "value": true
            }
          ],
          "target": "mentor_dreamwalker_trial"
        },
        {
          "text": "(Trickster) Mirror their shifting cadence to show comfort with change.",
          "condition": {
            "type": "has_tag",
            "value": "Trickster"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "dreamwalker_cadence_matched",
              "value": true
            }
          ],
          "target": "mentor_dreamwalker_trial"
        },
        {
          "text": "Thank them and return to the cocoons.",
          "target": "shed_market_cocoon_hostel"
        }
      ]
    },
    "mentor_dreamwalker_trial": {
      "title": "Dreamlace Trial",
      "text": "Threads of forgotten selves lace around you, the Dreamwalker asking you to guide them toward a shared cadence without losing your core.",
      "choices": [
        {
          "text": "Follow them through a braid of half-remembered moments.",
          "effects": [
            {
              "type": "set_flag",
              "flag": "dreamwalker_trial_completed",
              "value": true
            }
          ],
          "target": "mentor_dreamwalker_confluence"
        },
        {
          "text": "(Emissary) Convene the dream-selves into a gentle council.",
          "condition": {
            "type": "has_tag",
            "value": "Emissary"
          },
          "effects": [
            {
              "type": "rep_delta",
              "faction": "Quiet Ledger",
              "value": 1
            },
            {
              "type": "set_flag",
              "flag": "dreamwalker_trial_completed",
              "value": true
            }
          ],
          "target": "mentor_dreamwalker_confluence"
        },
        {
          "text": "(Lumenar) Light the path so no identity slips into shadow.",
          "condition": {
            "type": "has_tag",
            "value": "Lumenar"
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "dreamwalker_trial_completed",
              "value": true
            },
            {
              "type": "set_flag",
              "flag": "dreamwalker_path_lit",
              "value": true
            }
          ],
          "target": "mentor_dreamwalker_confluence"
        },
        {
          "text": "Step back to the hostel to steady yourself.",
          "target": "shed_market_cocoon_hostel"
        }
      ]
    },
    "mentor_dreamwalker_confluence": {
      "title": "Dream Confluence",
      "text": "The Dreamwalker weaves a pool of still thought, waiting to see if you can anchor both your waking self and the personas you escorted.",
      "choices": [
        {
          "text": "Hold the confluence until every self hums in harmony.",
          "condition": {
            "type": "flag_eq",
            "flag": "dreamwalker_trial_completed",
            "value": true
          },
          "effects": [
            {
              "type": "set_flag",
              "flag": "dreamwalker_confluence_ready",
              "value": true
            }
          ],
          "target": "mentor_dreamwalker_awakened"
        },
        {
          "text": "(Arbiter) Balance the voices before the pool settles.",
          "condition": {
            "type": "has_tag",
            "value": "Arbiter"
          },
          "effects": [
            {
              "type": "rep_delta",
              "faction": "Quiet Ledger",
              "value": 1
            },
            {
              "type": "set_flag",
              "flag": "dreamwalker_confluence_ready",
              "value": true
            }
          ],
          "target": "mentor_dreamwalker_awakened"
        },
        {
          "text": "Release the visions and return to the hostel.",
          "target": "shed_market_cocoon_hostel"
        }
      ]
    },
    "mentor_dreamwalker_awakened": {
      "title": "Dreamwalker's Benediction",
      "text": "Satisfied, the Dreamwalker places a ribbon of shared memory in your palm, offering the mantle of a traveler who can cross dreams.",
      "choices": [
        {
          "text": "Accept the ribbon and embrace the Dreamwalker mantle.",
          "condition": {
            "type": "flag_eq",
            "flag": "dreamwalker_confluence_ready",
            "value": true
          },
          "effects": [
            {
              "type": "add_tag",
              "value": "Dreamwalker"
            }
          ],
          "target": "shed_market_cocoon_hostel"
        },
        {
          "text": "Bow with gratitude and return to the cocoons.",
          "target": "shed_market_cocoon_hostel"
        },
        {
          "text": "Carry the dream ribbon toward the orchard's dream nursery.",
          "target": "starfallen_orchard_dream_nursery"
        }
      ]
    }
  },
  "starts": []
}
